#!/usr/bin/env python3
"""
add env line from file into supervisor config file

renders Python string template with env variables as template namespace,
output to stdout.

Usage:
    render_env config_file.tpl env_file > config_file
"""
import os
import sys
import binascii

def random_hex(nb):
    return binascii.hexlify(os.urandom(nb)).decode('ascii')

def render_template(tpl_f, env_f):
    # load env file
    with open(env_f) as f:
        env_lines = [ line.strip() for line in f.readlines() if not line.isspace() and not line.startswith('#') ]
    
    if not any(line.startswith('CONFIGPROXY_AUTH_TOKEN=') for line in env_lines):
        env_lines.append('CONFIGPROXY_AUTH_TOKEN=%s' % random_hex(64))
    
    env_line = 'ENVIRONMENT=%s' % (','.join(env_lines))
    
    # echo input file to stdout, excluding env line (there shouldn't be one)
    with open(tpl_f) as f:
        for line in f:
            if not line.startswith('ENVIRONMENT='):
                sys.stdout.write(line)
    
    # add env line:
    print(env_line)

if __name__ == '__main__':
    render_template(sys.argv[1], sys.argv[2])